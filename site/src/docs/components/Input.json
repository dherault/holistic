{
  "props": [
    {
      "name": "type",
      "type": "string",
      "description": "The type of the Input"
    },
    {
      "name": "value",
      "type": "(string | number | readonly string[]) & string | number",
      "description": "The value of the Input"
    },
    {
      "name": "defaultValue",
      "type": "(string | number | readonly string[]) & string | number",
      "description": "The default value of the Input"
    },
    {
      "name": "placeholder",
      "type": "string",
      "description": "The placeholder of the Input"
    },
    {
      "name": "onChange",
      "type": "(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void",
      "description": "Callback function called when the Input value changes"
    },
    {
      "name": "onFocus",
      "type": "(event: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement, Element>) => void",
      "description": "Callback function called when the Input gains focus"
    },
    {
      "name": "onBlur",
      "type": "(event: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement, Element>) => void",
      "description": "Callback function called when the Input looses focus"
    },
    {
      "name": "onKeyDown",
      "type": "(event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) => void",
      "description": "Callback function called when the Input received a keydown event"
    },
    {
      "name": "onKeyUp",
      "type": "(event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) => void",
      "description": "Callback function called when the Input received a keyup event"
    },
    {
      "name": "onEnter",
      "type": "(event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) => void",
      "description": "Callback function called when the Input received a \"Enter\" keydown event"
    },
    {
      "name": "startIcon",
      "type": "React.ReactNode",
      "description": "The icon react node at the start of the Input"
    },
    {
      "name": "endIcon",
      "type": "React.ReactNode",
      "description": "The icon react node at the end of the Input"
    },
    {
      "name": "disabled",
      "type": "boolean",
      "description": "Weither the Input is disabled or not"
    },
    {
      "name": "autoFocus",
      "type": "boolean",
      "description": "Weither the Input should focus on mount or not"
    },
    {
      "name": "multiline",
      "type": "boolean",
      "description": "Weither the Input is mutliline or not. If so, a <textarea> is rendered"
    },
    {
      "name": "minRows",
      "type": "number",
      "description": "If multiline, the minimum number of rows to display"
    },
    {
      "name": "maxRows",
      "type": "number",
      "description": "If multiline, the maximum number of rows to display"
    },
    {
      "name": "inputProps",
      "type": "any",
      "description": "The props for the input component"
    }
  ],
  "demos": [
    {
      "source": "function InputBasic() {\n  return (\n    <Input />\n  )\n}\n",
      "name": "Basic",
      "url": "https://storybook.honorable.design/iframe.html?args=&id=demos-input--basic&viewMode=story"
    },
    {
      "source": "function InputWidth100() {\n  return (\n    <Input width=\"100%\" />\n  )\n}\n",
      "name": "Width100",
      "url": "https://storybook.honorable.design/iframe.html?args=&id=demos-input--width&viewMode=story"
    },
    {
      "source": "function InputPlaceholder() {\n  return (\n    <Input placeholder=\"Type me if you can!\" />\n  )\n}\n",
      "name": "Placeholder",
      "url": "https://storybook.honorable.design/iframe.html?args=&id=demos-input--placeholder&viewMode=story"
    },
    {
      "source": "function InputDefaultValue() {\n  return (\n    <Input defaultValue=\"Type me if you can!\" />\n  )\n}\n",
      "name": "DefaultValue",
      "url": "https://storybook.honorable.design/iframe.html?args=&id=demos-input--default-value&viewMode=story"
    },
    {
      "source": "function InputTypeNumber() {\n  return (\n    <Input type=\"number\" />\n  )\n}\n",
      "name": "TypeNumber",
      "url": "https://storybook.honorable.design/iframe.html?args=&id=demos-input--type-number&viewMode=story"
    },
    {
      "source": "function InputControlled() {\n  const [value, setValue] = useState('')\n\n  return (\n    <Input\n      value={value}\n      onChange={event => setValue(event.target.value)}\n    />\n  )\n}\n",
      "name": "Controlled",
      "url": "https://storybook.honorable.design/iframe.html?args=&id=demos-input--controlled&viewMode=story"
    },
    {
      "source": "function InputCounter() {\n  const [counter, setCounter] = useState(0)\n\n  return (\n    <>\n      <Input\n        onEnter={() => setCounter(prev => x + 1)}\n      />\n      <P mt={1}>\n        {counter}\n      </P>\n    </>\n  )\n}\n",
      "name": "Counter",
      "url": "https://storybook.honorable.design/iframe.html?args=&id=demos-input--counter&viewMode=story"
    },
    {
      "source": "function InputStartIcon() {\n  return (\n    <Input startIcon={(\n      <svg\n        width={16}\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M10 6.5C10 8.433 8.433 10 6.5 10C4.567 10 3 8.433 3 6.5C3 4.567 4.567 3 6.5 3C8.433 3 10 4.567 10 6.5ZM9.30884 10.0159C8.53901 10.6318 7.56251 11 6.5 11C4.01472 11 2 8.98528 2 6.5C2 4.01472 4.01472 2 6.5 2C8.98528 2 11 4.01472 11 6.5C11 7.56251 10.6318 8.53901 10.0159 9.30884L12.8536 12.1464C13.0488 12.3417 13.0488 12.6583 12.8536 12.8536C12.6583 13.0488 12.3417 13.0488 12.1464 12.8536L9.30884 10.0159Z\"\n          fill=\"currentColor\"\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    )}\n    />\n  )\n}\n",
      "name": "StartIcon",
      "url": "https://storybook.honorable.design/iframe.html?args=&id=demos-input--start-icon&viewMode=story"
    },
    {
      "source": "function InputEndIcon() {\n  return (\n    <Input endIcon={(\n      <svg\n        width={16}\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M10 6.5C10 8.433 8.433 10 6.5 10C4.567 10 3 8.433 3 6.5C3 4.567 4.567 3 6.5 3C8.433 3 10 4.567 10 6.5ZM9.30884 10.0159C8.53901 10.6318 7.56251 11 6.5 11C4.01472 11 2 8.98528 2 6.5C2 4.01472 4.01472 2 6.5 2C8.98528 2 11 4.01472 11 6.5C11 7.56251 10.6318 8.53901 10.0159 9.30884L12.8536 12.1464C13.0488 12.3417 13.0488 12.6583 12.8536 12.8536C12.6583 13.0488 12.3417 13.0488 12.1464 12.8536L9.30884 10.0159Z\"\n          fill=\"currentColor\"\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    )}\n    />\n  )\n}\n",
      "name": "EndIcon",
      "url": "https://storybook.honorable.design/iframe.html?args=&id=demos-input--end-icon&viewMode=story"
    },
    {
      "source": "function InputAutoFocus() {\n  return (\n    <Input autoFocus />\n  )\n}\n",
      "name": "AutoFocus",
      "url": "https://storybook.honorable.design/iframe.html?args=&id=demos-input--auto-focus&viewMode=story"
    },
    {
      "source": "function InputMultiline() {\n  return (\n    <Input multiline />\n  )\n}\n",
      "name": "Multiline",
      "url": "https://storybook.honorable.design/iframe.html?args=&id=demos-input--multiline&viewMode=story"
    },
    {
      "source": "function InputMultilineMinMaxRows() {\n  return (\n    <Input\n      multiline \n      minRows={2}\n      maxRows={4} \n    />\n  )\n}\n",
      "name": "MultilineMinMaxRows",
      "url": "https://storybook.honorable.design/iframe.html?args=&id=demos-input---multiline-min-max-rows&viewMode=story"
    }
  ],
  "partsUrl": "https://storybook.honorable.design/iframe.html?args=&id=demos-input--parts&viewMode=story"
}